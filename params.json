{"name":"SilverGraph","tagline":"Generates data model visualisations from SilverStripe DataObjects, displaying database fields, relations and ancestry","body":"SilverGraph\r\n===========\r\n\r\nCreates data model visualisations of SilverStripe DataObjects, showing fields, relations and ancestry.\r\nCan output images in .png, .svg and raw GraphViz \"dot\" format.\r\nFlexible configuration options and can be called from command line and URL.\r\n\r\n![SilverGraph example](https://raw.github.com/froog/SilverGraph/master/doc/SilverGraph_example__location=cms,framework,mysite.png)\r\n\r\n_Example call: http://example.com/Silvergraph/png?location=cms,framework,mysite_\r\n\r\n##Installation##\r\n* Composer/Packagist: Install composer and then run `composer require froog/silvergraph` (* for version)\r\n* Manual: Download and extract the silvergraph folder into the top level of your site, and visit /dev/build?flush=all to rebuild the database.\r\n\r\n##Requirements##\r\n * SilverStripe 3.0.0+\r\n * To create images: GraphViz (latest version) http://www.graphviz.org/ \r\n  * To install (Debian/Ubuntu): `apt-get install graphviz`  \r\n\r\n##Usage##\r\n\r\n###Command line: (in site root)###\r\n\r\n* Default png image:   `sake Silvergraph/png > datamodel.png` \r\n* Parameters:   `sake Silvergraph/png location=mysite,cms inherited=1 exclude=SiteTree > datamodel.png` \r\n* Default dot file:    `sake Silvergraph/dot > datamodel.dot`\r\n\r\n###Browser: (logged in as admin)###\r\n\r\n* Default png image:   http://example.com/Silvergraph/png\r\n* Parameters:   http://example.com/Silvergraph/png?location=mysite,cms&inherited=1&exclude=SiteTree\r\n* Default dot file: http://example.com/Silvergraph/dot\r\n\r\n###Parameters###\r\n\r\n####Specify the folder to look for classes under\r\n* `location=mysite` _(default)_   Only graph classes under the /mysite folder\r\n* `location=/`                  Graph ALL classes in every module (warning - may take a long time and could generate a large .png)\r\n* `location=mysite,mymodule`    Only graph classes under /mysite and /mymodule folders\r\n\r\n####Remove specific classes from the graph\r\n* `exclude=SiteTree`\r\n* `exclude=SiteTree,File`\r\n\r\n####How verbosely to show relations\r\n* `relations=0` Don't show any relations\r\n* `relations=1` _(default)_ Don't show inherited relations\r\n* `relations=2`\t\t\tShow inherited relations (verbose)\r\n\r\n####How verbosely to show fields\r\n* `fields=0` Don't show any fields\r\n* `fields=1` _(default)_ Show only fields defined on self\r\n* `fields=2`\t\t\tShow inherited fields (verbose)\r\n\r\n####How verbosely to show ancestors\r\n* `ancestry=0` Don't show any ancestry relations\r\n* `ancestry=1` _(default)_ Show ancestry relations\r\n\r\n####Include DataObject on the graph\r\n* `include-root=0` _(default)_   Don't graph DataObject\r\n* `include-root=1`              Graph DataObject\r\n\r\n####Group classes by modules\r\n* `group=0` _(default)_  Don't group by modules\r\n* `group=1`            Group the modules into their own container\r\n\r\n####Specify direction graph is laid out\r\n* `rankdir=x`            \tWhere x is `TB` _(default)_ ,`LR`,`RL`, or `BT` (top-bottom, left-right, right-left, bottom-top)\r\n\r\n## TO DO\r\n\r\n* Better default styling/colours of the graph\r\n* Less verbose option for relations, eg; combining has_one, has_many paths on the same path\r\n* Better error handling from dot -> png, if error in dot format\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}